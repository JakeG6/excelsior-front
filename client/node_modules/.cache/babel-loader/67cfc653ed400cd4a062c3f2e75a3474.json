{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js\";\nimport React, { Component } from 'react';\nimport marvelLogo from './marvel-logo.png';\nimport DCLogo from './DC-logo.png';\nimport imageLogo from './image-logo.png';\nimport valiantLogo from './valiant-logo.jpeg';\nimport darkHorseLogo from './dark-horse-logo.jpg';\nimport noImageFound from \"./image-default.jpg\";\nimport IDWLogo from './IDW-logo.png';\nimport \"./ResultsPage.css\";\n\nvar ResultsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultsPage, _Component);\n\n  function ResultsPage(props) {\n    _classCallCheck(this, ResultsPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResultsPage).call(this, props));\n  }\n\n  _createClass(ResultsPage, [{\n    key: \"render\",\n    value: function render() {\n      function cardStylePicker(company) {\n        switch (company) {\n          case \"Marvel\":\n            return \"card marvel\";\n            break;\n\n          case \"DC\":\n            return \"card dc\";\n            break;\n\n          default:\n            return \"card indy\";\n        }\n      }\n\n      function logoPicker(company) {\n        switch (company) {\n          case \"Marvel\":\n            return marvelLogo;\n            break;\n\n          case \"DC\":\n            return DCLogo;\n            break;\n\n          case \"Image\":\n            return imageLogo;\n            break;\n\n          case \"Valiant\":\n            return valiantLogo;\n            break;\n\n          case \"Dark Horse\":\n            return darkHorseLogo;\n            break;\n\n          case \"IDW\":\n            return IDWLogo;\n            break;\n\n          default:\n            return \"\";\n        }\n      } // if (this.props.searchedOnce == true) {\n      //     if (this.props.searchResults.length > 0) {\n\n\n      return React.createElement(\"div\", {\n        className: \"resultsPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.props.searchResults.map(function (char) {\n        return React.createElement(\"div\", {\n          className: cardStylePicker(char.company),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cardTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"charImage\",\n          src: char.imageURL ? char.imageURL : noImageFound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, char.name.toUpperCase()), React.createElement(\"div\", {\n          className: \"cardTop2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, \"Name: \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, char.civName)), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"b\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Debut: \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, char.firstDebut))), React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"column\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"text-align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"ABILITIES\"), React.createElement(\"ul\", {\n          className: \"abilities-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, char.abilities.map(function (ability) {\n          return React.createElement(\"li\", {\n            className: \"text-align-left word-wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, ability);\n        }))), React.createElement(\"div\", {\n          className: \"column \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          className: \"text-align-left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"TEAMS\"), React.createElement(\"ul\", {\n          className: \"team-list\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, char.teams.map(function (team) {\n          return React.createElement(\"li\", {\n            className: \"text-align-left word-wrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, team);\n        })))))), React.createElement(\"div\", {\n          className: \"cardBottom row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, char.desc)), React.createElement(\"div\", {\n          className: \"logo-bar\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"company-logo\",\n          src: logoPicker(char.company),\n          alt: \"Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        })))));\n      }), \"}\");\n    } // else {\n    //     return (\n    //         <div className=\"resultsPage\">\n    //             <h1 className=\"sorry-message\">Sorry, we didn't find any results.</h1>\n    //         </div>   \n    //     )\n    // }  \n    // }\n\n  }]);\n\n  return ResultsPage;\n}(Component);\n\nexport default ResultsPage;","map":{"version":3,"sources":["/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js"],"names":["React","Component","marvelLogo","DCLogo","imageLogo","valiantLogo","darkHorseLogo","noImageFound","IDWLogo","ResultsPage","props","cardStylePicker","company","logoPicker","searchResults","map","char","imageURL","name","toUpperCase","civName","firstDebut","abilities","ability","teams","team","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport marvelLogo from'./marvel-logo.png';\nimport DCLogo from'./DC-logo.png';\nimport imageLogo from './image-logo.png';\nimport valiantLogo from './valiant-logo.jpeg';\nimport darkHorseLogo from './dark-horse-logo.jpg';\nimport noImageFound from \"./image-default.jpg\";\nimport IDWLogo from './IDW-logo.png';\nimport \"./ResultsPage.css\";\n\nclass ResultsPage extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n \n  render() {\n\n    \n\n    function cardStylePicker(company) {\n\n        switch(company) {\n            case \"Marvel\":\n                return \"card marvel\";\n                break;\n            case \"DC\":\n                return \"card dc\";\n                break;\n            default:\n                return \"card indy\";\n        }\n    }\n\n    function logoPicker(company) {\n\n        switch(company) {\n            case \"Marvel\":\n                return marvelLogo;\n                break;\n            case \"DC\":\n                return DCLogo;\n                break;\n            case \"Image\":\n                return imageLogo;\n                break;\n            case \"Valiant\":\n                return valiantLogo;\n                break;\n            case \"Dark Horse\":\n                return darkHorseLogo;\n                break;\n            case \"IDW\":\n                return IDWLogo;\n                break;   \n            default:\n                return \"\";\n        }\n    }\n\n    // if (this.props.searchedOnce == true) {\n    //     if (this.props.searchResults.length > 0) {\n            return (\n                <div className=\"resultsPage\">\n                    {   \n                            this.props.searchResults.map((char) => {\n                                return (\n                                    <div className={cardStylePicker(char.company)}>\n                                        <div className=\"cardTop\">\n                                            <div className=\"row\">\n                                                <img className=\"charImage\" src={(char.imageURL) ? char.imageURL : noImageFound} />\n                                                <div className=\"column\">\n                                                    <h1>{char.name.toUpperCase()}</h1>\n                                                    <div className=\"cardTop2\">\n                                                        <div>\n                                                            <b>Name: </b>\n                                                            <p>{char.civName}</p>\n                                                        </div>\n                                                        <div>\n                                                            <b>Debut: </b>\n                                                            <p>{char.firstDebut}</p>\n                                                        </div>\n                                                    </div>                                   \n                                                    <div className=\"row\">\n                                                        <div className=\"column\">\n                                                            <h2 className=\"text-align-left\">ABILITIES</h2>\n                                                            <ul className=\"abilities-list\">\n                                                            {char.abilities.map(ability => {\n                                                                return (<li className=\"text-align-left word-wrap\">{ability}</li>)\n                                                            })}\n                                                            </ul>\n                                                        </div>\n                                                        <div className=\"column \">\n                                                            <h2 className=\"text-align-left\">TEAMS</h2>\n                                                            <ul className=\"team-list\">\n                                                            {char.teams.map(team => {\n                                                                return (<li className=\"text-align-left word-wrap\">{team}</li>)\n                                                            })}\n                                                            </ul>\n                                                        </div >\n                                                    </div>\n                                                </div>\n                                            </div>                                 \n                                            <div className=\"cardBottom row\">\n                                                <p className=\"description\"><i>{char.desc}</i></p>\n                                                <div className=\"logo-bar\">\n                                                    <img className=\"company-logo\" src={logoPicker(char.company)} alt=\"Logo\"/>         \n                                                </div>                   \n                                            </div> \n                                        </div>                           \n                                    </div>\n                                )\n                            })\n                        }    \n                    }\n                </div>\n              \n            );\n        }\n        // else {\n        //     return (\n        //         <div className=\"resultsPage\">\n        //             <h1 className=\"sorry-message\">Sorry, we didn't find any results.</h1>\n        //         </div>   \n        //     )\n        // }  \n    // }\n}\n\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}