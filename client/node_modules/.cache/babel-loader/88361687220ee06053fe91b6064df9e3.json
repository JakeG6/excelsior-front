{"ast":null,"code":"var _this = this;\n\nvar buildQuery = function buildQuery(state) {\n  var searchQuery = '/api/chars/search?';\n  var queryStrArr = [];\n\n  if (state.name) {\n    queryStrArr.push(\"name=\".concat(_this.state.name));\n  }\n\n  if (_this.state.alignment) {\n    queryStrArr.push(\"alignment=\".concat(_this.state.alignment));\n  }\n\n  if (_this.state.team) {\n    queryStrArr.push(\"teams=[\\\"\".concat(_this.state.team, \"\\\"]\"));\n  }\n\n  if (_this.state.ability) {\n    queryStrArr.push(\"ability=\".concat(_this.state.ability));\n  }\n\n  if (_this.state.company) {\n    queryStrArr.push(\"company=\".concat(_this.state.company));\n  }\n\n  for (var i = 0; i < queryStrArr.length; i++) {\n    searchQuery += queryStrArr[i];\n\n    if (i < queryStrArr.length - 1) {\n      searchQuery += '&';\n    }\n  } //console.log(searchQuery);\n\n\n  _this.setState({\n    apiURL: searchQuery\n  }, function () {\n    axios.get(_this.state.apiURL).then(function (response) {\n      _this.setState({\n        searchResults: response.data,\n        searchedOnce: true\n      }, function () {// console.log(this.state.apiURL);\n        // console.log(this.state.searchResults);\n        // console.log(this.state.searchedOnce);\n      });\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    }).then(function () {// always executed\n      // console.log('good search');\n    });\n  });\n};\n\nexport default buildQuery;","map":{"version":3,"sources":["/Users/jake/dev/2019/excelsior/excelsior-front/client/src/Search/buildQuery.js"],"names":["buildQuery","state","searchQuery","queryStrArr","name","push","alignment","team","ability","company","i","length","setState","apiURL","axios","get","then","response","searchResults","data","searchedOnce","catch","error","console","log"],"mappings":";;AAAA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAE1B,MAAIC,WAAW,GAAG,oBAAlB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAIF,KAAK,CAACG,IAAV,EAAgB;AAChBD,IAAAA,WAAW,CAACE,IAAZ,gBAAyB,KAAI,CAACJ,KAAL,CAAWG,IAApC;AACC;;AAED,MAAI,KAAI,CAACH,KAAL,CAAWK,SAAf,EAA0B;AAC1BH,IAAAA,WAAW,CAACE,IAAZ,qBAA8B,KAAI,CAACJ,KAAL,CAAWK,SAAzC;AACC;;AAED,MAAI,KAAI,CAACL,KAAL,CAAWM,IAAf,EAAqB;AACrBJ,IAAAA,WAAW,CAACE,IAAZ,oBAA4B,KAAI,CAACJ,KAAL,CAAWM,IAAvC;AACC;;AAED,MAAI,KAAI,CAACN,KAAL,CAAWO,OAAf,EAAwB;AACxBL,IAAAA,WAAW,CAACE,IAAZ,mBAA4B,KAAI,CAACJ,KAAL,CAAWO,OAAvC;AACC;;AAED,MAAI,KAAI,CAACP,KAAL,CAAWQ,OAAf,EAAwB;AACpBN,IAAAA,WAAW,CAACE,IAAZ,mBAA4B,KAAI,CAACJ,KAAL,CAAWQ,OAAvC;AACH;;AAED,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,WAAW,CAACQ,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AACzCR,IAAAA,WAAW,IAAIC,WAAW,CAACO,CAAD,CAA1B;;AACA,QAAKA,CAAC,GAAGP,WAAW,CAACQ,MAAZ,GAAoB,CAA7B,EAAgC;AAC5BT,MAAAA,WAAW,IAAI,GAAf;AACH;AACJ,GA9ByB,CA+B1B;;;AAEA,EAAA,KAAI,CAACU,QAAL,CAAc;AAACC,IAAAA,MAAM,EAAEX;AAAT,GAAd,EAAoC,YAAM;AACtCY,IAAAA,KAAK,CAACC,GAAN,CAAU,KAAI,CAACd,KAAL,CAAWY,MAArB,EAA6BG,IAA7B,CAAkC,UAACC,QAAD,EAAc;AAC5C,MAAA,KAAI,CAACL,QAAL,CAAc;AAACM,QAAAA,aAAa,EAAED,QAAQ,CAACE,IAAzB;AAA+BC,QAAAA,YAAY,EAAE;AAA7C,OAAd,EAAkE,YAAM,CACpE;AACA;AACA;AACH,OAJD;AAKH,KAND,EAOCC,KAPD,CAOO,UAACC,KAAD,EAAW;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVD,EAWCN,IAXD,CAWM,YAAO,CACT;AACA;AACH,KAdD;AAeH,GAhBD;AAiBH,CAlDD;;AAoDA,eAAehB,UAAf","sourcesContent":["const buildQuery = (state) => {\n\n    let searchQuery = '/api/chars/search?';\n    let queryStrArr = [];\n\n    if (state.name) {\n    queryStrArr.push(`name=${this.state.name}`);\n    }\n\n    if (this.state.alignment) {\n    queryStrArr.push(`alignment=${this.state.alignment}`);\n    }\n\n    if (this.state.team) {\n    queryStrArr.push(`teams=[\"${this.state.team}\"]`);\n    }\n\n    if (this.state.ability) {\n    queryStrArr.push(`ability=${this.state.ability}`);\n    }\n\n    if (this.state.company) {\n        queryStrArr.push(`company=${this.state.company}`);\n    }\n\n    for (let i = 0; i < queryStrArr.length; i++) {\n        searchQuery += queryStrArr[i];\n        if  (i < queryStrArr.length -1) {\n            searchQuery += '&';\n        }\n    }\n    //console.log(searchQuery);\n    \n    this.setState({apiURL: searchQuery},() => {       \n        axios.get(this.state.apiURL).then((response) => {\n            this.setState({searchResults: response.data, searchedOnce: true}, () => {\n                // console.log(this.state.apiURL);\n                // console.log(this.state.searchResults);\n                // console.log(this.state.searchedOnce);\n            });\n        })\n        .catch((error) => {\n            // handle error\n            console.log(error);\n        })\n        .then(() =>  {\n            // always executed\n            // console.log('good search');\n        });\n    });\n}\n\nexport default buildQuery;"]},"metadata":{},"sourceType":"module"}