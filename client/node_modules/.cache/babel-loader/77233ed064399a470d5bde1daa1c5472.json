{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js\";\nimport React, { Component } from 'react';\nimport marvelLogo from './marvel-logo.png';\nimport DCLogo from './DC-logo.png';\nimport imageLogo from './image-logo.png';\nimport valiantLogo from './valiant-logo.jpeg';\nimport darkHorseLogo from './dark-horse-logo.jpg';\nimport noImageFound from \"./image-default.jpg\";\nimport IDWLogo from './IDW-logo.png'; // import \"./ResultsPage.css\";\n\nvar ResultsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultsPage, _Component);\n\n  function ResultsPage(props) {\n    _classCallCheck(this, ResultsPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResultsPage).call(this, props));\n  }\n\n  _createClass(ResultsPage, [{\n    key: \"render\",\n    value: function render() {\n      function cardStylePicker(company) {\n        switch (company) {\n          case \"Marvel\":\n            return \"card marvel\";\n            break;\n\n          case \"DC\":\n            return \"card dc\";\n            break;\n\n          default:\n            return \"card indy\";\n        }\n      }\n\n      function logoPicker(company) {\n        switch (company) {\n          case \"Marvel\":\n            return marvelLogo;\n            break;\n\n          case \"DC\":\n            return DCLogo;\n            break;\n\n          case \"Image\":\n            return imageLogo;\n            break;\n\n          case \"Valiant\":\n            return valiantLogo;\n            break;\n\n          case \"Dark Horse\":\n            return darkHorseLogo;\n            break;\n\n          case \"IDW\":\n            return IDWLogo;\n            break;\n\n          default:\n            return \"\";\n        }\n      }\n\n      if (this.props.searchedOnce) {\n        if (this.props.searchResults.length > 0) {\n          return React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, this.props.searchResults.map(function (char) {\n            return React.createElement(\"div\", {\n              className: \"\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: cardStylePicker(char.company),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"cardTop\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"row\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"charImage\",\n              src: char.imageURL ? char.imageURL : noImageFound,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, char.name.toUpperCase()), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 78\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, \"Name: \"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            }, char.civName)), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, \"Debut: \"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, char.firstDebut))), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 89\n              },\n              __self: this\n            }, \"ABILITIES\"), React.createElement(\"ul\", {\n              className: \"abilities-list\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 90\n              },\n              __self: this\n            }, char.abilities.map(function (ability) {\n              return React.createElement(\"li\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 92\n                },\n                __self: this\n              }, ability);\n            }))), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 96\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97\n              },\n              __self: this\n            }, \"TEAMS\"), React.createElement(\"ul\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98\n              },\n              __self: this\n            }, char.teams.map(function (team) {\n              return React.createElement(\"li\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 100\n                },\n                __self: this\n              }, team);\n            })))))), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            }, char.desc)), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 109\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"company-logo\",\n              src: logoPicker(char.company),\n              alt: \"Logo\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }))))));\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            className: \"sorry-message full-area circuit-background\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, \"Sorry, but your search didn't find any results.\"));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          className: \"full-area circuit-background\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return ResultsPage;\n}(Component);\n\nexport default ResultsPage;","map":{"version":3,"sources":["/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js"],"names":["React","Component","marvelLogo","DCLogo","imageLogo","valiantLogo","darkHorseLogo","noImageFound","IDWLogo","ResultsPage","props","cardStylePicker","company","logoPicker","searchedOnce","searchResults","length","map","char","imageURL","name","toUpperCase","civName","firstDebut","abilities","ability","teams","team","desc"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAkB,eAAlB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CACA;;IAEMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oFACTA,KADS;AAElB;;;;6BAEQ;AAEL,eAASC,eAAT,CAAyBC,OAAzB,EAAkC;AAE9B,gBAAOA,OAAP;AACI,eAAK,QAAL;AACI,mBAAO,aAAP;AACA;;AACJ,eAAK,IAAL;AACI,mBAAO,SAAP;AACA;;AACJ;AACI,mBAAO,WAAP;AARR;AAWH;;AAED,eAASC,UAAT,CAAoBD,OAApB,EAA6B;AAEzB,gBAAOA,OAAP;AACI,eAAK,QAAL;AACI,mBAAOV,UAAP;AACA;;AACJ,eAAK,IAAL;AACI,mBAAOC,MAAP;AACA;;AACJ,eAAK,OAAL;AACI,mBAAOC,SAAP;AACA;;AACJ,eAAK,SAAL;AACI,mBAAOC,WAAP;AACA;;AACJ,eAAK,YAAL;AACI,mBAAOC,aAAP;AACA;;AACJ,eAAK,KAAL;AACI,mBAAOE,OAAP;AACA;;AACJ;AACI,mBAAO,EAAP;AApBR;AAuBH;;AAED,UAAG,KAAKE,KAAL,CAAWI,YAAd,EAA4B;AACxB,YAAI,KAAKJ,KAAL,CAAWK,aAAX,CAAyBC,MAAzB,GAAkC,CAAtC,EAAyC;AACrC,iBAEI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAGQ,KAAKN,KAAL,CAAWK,aAAX,CAAyBE,GAAzB,CAA6B,UAACC,IAAD,EAAU;AACnC,mBACI;AAAK,cAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAEP,eAAe,CAACO,IAAI,CAACN,OAAN,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACA;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAC,WAAf;AAA2B,cAAA,GAAG,EAAGM,IAAI,CAACC,QAAN,GAAkBD,IAAI,CAACC,QAAvB,GAAkCZ,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKW,IAAI,CAACE,IAAL,CAAUC,WAAV,EAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIH,IAAI,CAACI,OAAT,CAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIJ,IAAI,CAACK,UAAT,CAFJ,CALJ,CAFJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAI,cAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACCL,IAAI,CAACM,SAAL,CAAeP,GAAf,CAAmB,UAAAQ,OAAO,EAAI;AAC3B,qBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAKA,OAAL,CAAR;AACH,aAFA,CADD,CAFJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACCP,IAAI,CAACQ,KAAL,CAAWT,GAAX,CAAe,UAAAU,IAAI,EAAI;AACpB,qBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAKA,IAAL,CAAR;AACH,aAFA,CADD,CAFJ,CATJ,CAZJ,CAFJ,CADJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAIT,IAAI,CAACU,IAAT,CAAJ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAK,cAAA,SAAS,EAAC,cAAf;AAA8B,cAAA,GAAG,EAAEf,UAAU,CAACK,IAAI,CAACN,OAAN,CAA7C;AAA6D,cAAA,GAAG,EAAC,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAFJ,CAnCJ,CADA,CADJ,CADJ;AAiDH,WAlDD,CAHR,CAFJ;AA2DH,SA5DD,MA6DK;AACD,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAK;AAAI,YAAA,SAAS,EAAC,4CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAAL,CADJ;AAGH;AACJ,OAnED,MAoEK;AACD,eACI;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AAGJ;;;;EA7HqBX,S;;AAgI1B,eAAeQ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport marvelLogo from'./marvel-logo.png';\nimport DCLogo from'./DC-logo.png';\nimport imageLogo from './image-logo.png';\nimport valiantLogo from './valiant-logo.jpeg';\nimport darkHorseLogo from './dark-horse-logo.jpg';\nimport noImageFound from \"./image-default.jpg\";\nimport IDWLogo from './IDW-logo.png';\n// import \"./ResultsPage.css\";\n\nclass ResultsPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n \n    render() {\n\n        function cardStylePicker(company) {\n\n            switch(company) {\n                case \"Marvel\":\n                    return \"card marvel\";\n                    break;\n                case \"DC\":\n                    return \"card dc\";\n                    break;\n                default:\n                    return \"card indy\";\n            }\n\n        }\n\n        function logoPicker(company) {\n            \n            switch(company) {\n                case \"Marvel\":\n                    return marvelLogo;\n                    break;\n                case \"DC\":\n                    return DCLogo;\n                    break;\n                case \"Image\":\n                    return imageLogo;\n                    break;\n                case \"Valiant\":\n                    return valiantLogo;\n                    break;\n                case \"Dark Horse\":\n                    return darkHorseLogo;\n                    break;\n                case \"IDW\":\n                    return IDWLogo;\n                    break;   \n                default:\n                    return \"\";\n            }\n            \n        }\n\n        if(this.props.searchedOnce) {\n            if (this.props.searchResults.length > 0) {\n                return (\n                    \n                    <div className=\"container\">\n                        \n                        {   \n                            this.props.searchResults.map((char) => {\n                                return (\n                                    <div className=\"\">\n                                        <div className={cardStylePicker(char.company)}>\n                                        <div className=\"cardTop\">\n                                            <div className=\"row\">\n                                                <img className=\"charImage\" src={(char.imageURL) ? char.imageURL : noImageFound} />\n                                                <div>\n                                                    <h1>{char.name.toUpperCase()}</h1>\n                                                    <div>\n                                                        <div>\n                                                            <b>Name: </b>\n                                                            <p>{char.civName}</p>\n                                                        </div>\n                                                        <div>\n                                                            <b>Debut: </b>\n                                                            <p>{char.firstDebut}</p>\n                                                        </div>\n                                                    </div>                                   \n                                                    <div>\n                                                        <div>\n                                                            <h2>ABILITIES</h2>\n                                                            <ul className=\"abilities-list\">\n                                                            {char.abilities.map(ability => {\n                                                                return (<li>{ability}</li>)\n                                                            })}\n                                                            </ul>\n                                                        </div>\n                                                        <div>\n                                                            <h2>TEAMS</h2>\n                                                            <ul>\n                                                            {char.teams.map(team => {\n                                                                return (<li>{team}</li>)\n                                                            })}\n                                                            </ul>\n                                                        </div >\n                                                    </div>\n                                                </div>\n                                            </div>                                 \n                                            <div>\n                                                <p ><i>{char.desc}</i></p>\n                                                <div>\n                                                    <img className=\"company-logo\" src={logoPicker(char.company)} alt=\"Logo\"/>         \n                                                </div>                   \n                                            </div> \n                                        </div>                           \n                                    </div>\n                                    </div>\n                                    \n                                )\n                            })\n                        }    \n                    </div>     \n                )\n            }\n            else {\n                return (\n                    <div><h1 className=\"sorry-message full-area circuit-background\">Sorry, but your search didn't find any results.</h1></div>\n                )\n            }\n        }\n        else {\n            return (\n                <div className=\"full-area circuit-background\"></div>\n            )\n        }\n    \n             \n    }\n}\n\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}