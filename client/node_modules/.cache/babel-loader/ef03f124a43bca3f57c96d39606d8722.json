{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport marvelLogo from './marvel-logo.png';\nimport DCLogo from './DC-logo.png';\nimport imageLogo from './image-logo.png';\nimport valiantLogo from './valiant-logo.jpeg';\nimport darkHorseLogo from './dark-horse-logo.jpg';\nimport noImageFound from \"./image-default.jpg\";\nimport IDWLogo from './IDW-logo.png';\nimport \"./ResultsPage.css\";\n\nvar ResultsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultsPage, _Component);\n\n  function ResultsPage(props) {\n    _classCallCheck(this, ResultsPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResultsPage).call(this, props));\n  }\n\n  _createClass(ResultsPage, [{\n    key: \"render\",\n    value: function render() {\n      function cardStylePicker(company) {\n        switch (company) {\n          case \"Marvel\":\n            return \"card marvel\";\n            break;\n\n          case \"DC\":\n            return \"card dc\";\n            break;\n\n          default:\n            return \"card indy\";\n        }\n      }\n\n      function logoPicker(company) {\n        switch (company) {\n          case \"Marvel\":\n            return marvelLogo;\n            break;\n\n          case \"DC\":\n            return DCLogo;\n            break;\n\n          case \"Image\":\n            return imageLogo;\n            break;\n\n          case \"Valiant\":\n            return valiantLogo;\n            break;\n\n          case \"Dark Horse\":\n            return darkHorseLogo;\n            break;\n\n          case \"IDW\":\n            return IDWLogo;\n            break;\n\n          default:\n            return \"\";\n        }\n      }\n\n      if (this.props.searchedOnce) {\n        if (this.props.searchResults.length > 0) {\n          return React.createElement(\"div\", {\n            className: \"resultsPage full-area circuit-background\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          }, this.props.searchResults.map(function (char) {\n            return React.createElement(Grid, {\n              container: true,\n              spacing: 16,\n              justify: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }, React.createElement(Grid, {\n              item: true,\n              lg: 8,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: cardStylePicker(char.company),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, React.createElement(Grid, {\n              container: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, React.createElement(Grid, {\n              item: true,\n              md: 6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"charImage\",\n              src: char.imageURL ? char.imageURL : noImageFound,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 77\n              },\n              __self: this\n            })), React.createElement(Grid, {\n              item: true,\n              md: 6,\n              justify: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 79\n              },\n              __self: this\n            }, React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 80\n              },\n              __self: this\n            }, char.name.toUpperCase()), React.createElement(Grid, {\n              container: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 81\n              },\n              __self: this\n            }, React.createElement(Grid, {\n              item: true,\n              xs: 6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 82\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 83\n              },\n              __self: this\n            }, \"Name: \"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 84\n              },\n              __self: this\n            }, char.civName)), React.createElement(Grid, {\n              item: true,\n              xs: 6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 86\n              },\n              __self: this\n            }, React.createElement(\"b\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87\n              },\n              __self: this\n            }, \"Debut: \"), React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 88\n              },\n              __self: this\n            }, char.firstDebut))), React.createElement(Grid, {\n              container: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91\n              },\n              __self: this\n            }, React.createElement(Grid, {\n              item: true,\n              xs: 6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              className: \"text-align-left\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93\n              },\n              __self: this\n            }, \"ABILITIES\"), React.createElement(\"ul\", {\n              className: \"abilities-list\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 94\n              },\n              __self: this\n            }, char.abilities.map(function (ability) {\n              return React.createElement(\"li\", {\n                className: \"text-align-left word-wrap\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96\n                },\n                __self: this\n              }, ability);\n            }))), React.createElement(Grid, {\n              item: true,\n              xs: 6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100\n              },\n              __self: this\n            }, React.createElement(\"h2\", {\n              className: \"text-align-left\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101\n              },\n              __self: this\n            }, \"TEAMS\"), React.createElement(\"ul\", {\n              className: \"team-list\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102\n              },\n              __self: this\n            }, char.teams.map(function (team) {\n              return React.createElement(\"li\", {\n                className: \"text-align-left word-wrap\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 104\n                },\n                __self: this\n              }, team);\n            }))))), React.createElement(Grid, {\n              container: true,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 110\n              },\n              __self: this\n            }, React.createElement(Grid, {\n              item: true,\n              md: 6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 111\n              },\n              __self: this\n            }, React.createElement(\"p\", {\n              className: \"description\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 112\n              },\n              __self: this\n            }, char.desc))), React.createElement(Grid, {\n              item: true,\n              md: 6,\n              alignItems: \"center\",\n              justify: \"center\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }, React.createElement(\"img\", {\n              className: \"company-logo\",\n              src: logoPicker(char.company),\n              alt: \"Logo\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 115\n              },\n              __self: this\n            })))))));\n          }));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"resultsPage full-area circuit-background\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            className: \"sorry-message\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, \"Sorry, but your search didn't find any results.\"));\n        }\n      } else {\n        return React.createElement(\"div\", {\n          className: \"resultsPage full-area circuit-background\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return ResultsPage;\n}(Component);\n\nexport default ResultsPage;","map":{"version":3,"sources":["/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js"],"names":["React","Component","Grid","marvelLogo","DCLogo","imageLogo","valiantLogo","darkHorseLogo","noImageFound","IDWLogo","ResultsPage","props","cardStylePicker","company","logoPicker","searchedOnce","searchResults","length","map","char","imageURL","name","toUpperCase","civName","firstDebut","abilities","ability","teams","team","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport marvelLogo from'./marvel-logo.png';\nimport DCLogo from'./DC-logo.png';\nimport imageLogo from './image-logo.png';\nimport valiantLogo from './valiant-logo.jpeg';\nimport darkHorseLogo from './dark-horse-logo.jpg';\nimport noImageFound from \"./image-default.jpg\";\nimport IDWLogo from './IDW-logo.png';\nimport \"./ResultsPage.css\";\n\nclass ResultsPage extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n \n    render() {\n\n        function cardStylePicker(company) {\n\n            switch(company) {\n                case \"Marvel\":\n                    return \"card marvel\";\n                    break;\n                case \"DC\":\n                    return \"card dc\";\n                    break;\n                default:\n                    return \"card indy\";\n            }\n\n        }\n\n        function logoPicker(company) {\n            \n            switch(company) {\n                case \"Marvel\":\n                    return marvelLogo;\n                    break;\n                case \"DC\":\n                    return DCLogo;\n                    break;\n                case \"Image\":\n                    return imageLogo;\n                    break;\n                case \"Valiant\":\n                    return valiantLogo;\n                    break;\n                case \"Dark Horse\":\n                    return darkHorseLogo;\n                    break;\n                case \"IDW\":\n                    return IDWLogo;\n                    break;   \n                default:\n                    return \"\";\n            }\n            \n        }\n\n        if(this.props.searchedOnce) {\n            if (this.props.searchResults.length > 0) {\n                return (\n                    \n                    <div className=\"resultsPage full-area circuit-background\">\n                        \n                        {   \n                            this.props.searchResults.map((char) => {\n                                return (\n                                    <Grid container spacing={16} justify=\"center\">\n                                        <Grid item lg={8}>\n                                            <div className={cardStylePicker(char.company)}>\n                                                <Grid container>\n                                                    <Grid item md={6}>\n                                                        <img className=\"charImage\" src={(char.imageURL) ? char.imageURL : noImageFound} />\n                                                    </Grid>\n                                                    <Grid item md={6} justify=\"center\">\n                                                        <h1>{char.name.toUpperCase()}</h1>\n                                                        <Grid container>\n                                                            <Grid item xs={6}>\n                                                                <b>Name: </b>\n                                                                <p>{char.civName}</p>\n                                                            </Grid>\n                                                            <Grid item xs={6}>\n                                                                <b>Debut: </b>\n                                                                <p>{char.firstDebut}</p>\n                                                            </Grid>\n                                                        </Grid>\n                                                        <Grid container>\n                                                            <Grid item xs={6}>\n                                                                <h2 className=\"text-align-left\">ABILITIES</h2>\n                                                                <ul className=\"abilities-list\">\n                                                                {char.abilities.map(ability => {\n                                                                    return (<li className=\"text-align-left word-wrap\">{ability}</li>)\n                                                                })}\n                                                                </ul>\n                                                            </Grid>\n                                                            <Grid item xs={6}>\n                                                                <h2 className=\"text-align-left\">TEAMS</h2>\n                                                                <ul className=\"team-list\">\n                                                                {char.teams.map(team => {\n                                                                    return (<li className=\"text-align-left word-wrap\">{team}</li>)\n                                                                })}\n                                                                </ul>\n                                                            </Grid>\n                                                    </Grid>\n                                                </Grid>\n                                                <Grid container>\n                                                    <Grid item md={6}>\n                                                        <p className=\"description\"><i>{char.desc}</i></p>\n                                                    </Grid>\n                                                    <Grid item md={6} alignItems=\"center\" justify=\"center\">\n                                                        <img className=\"company-logo\" src={logoPicker(char.company)} alt=\"Logo\"/>            \n                                                    </Grid>\n                                                     \n                                                </Grid>\n                                            </Grid>\n                                     \n\n                                            </div>                      \n                                        </Grid>\n                                        \n                                    </Grid>\n                                    \n                                    \n                                )\n                            })\n                        }    \n                    </div>     \n                )\n            }\n            else {\n                return (\n                    <div className=\"resultsPage full-area circuit-background\">\n                    <h1 className=\"sorry-message\">Sorry, but your search didn't find any results.</h1>\n                    </div>\n                )\n            }\n        }\n        else {\n            return (\n                <div className=\"resultsPage full-area circuit-background\"></div>\n            )\n        }\n    \n             \n    }\n}\n\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}