{"ast":null,"code":"import _classCallCheck from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jake/dev/excelsior/excelsior-front/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js\";\nimport React, { Component } from 'react';\nimport marvelLogo from './marvel-logo.png';\nimport DCLogo from './DC-logo.png';\nimport noImageFound from \"./image-default.jpg\";\nimport \"./ResultsPage.css\"; //import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nvar ResultsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultsPage, _Component);\n\n  function ResultsPage(props) {\n    _classCallCheck(this, ResultsPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ResultsPage).call(this, props));\n  }\n\n  _createClass(ResultsPage, [{\n    key: \"render\",\n    value: function render() {\n      function charImagePicker(url) {\n        if (url) {}\n      }\n\n      function cardStylePicker(company) {\n        if (company === \"Marvel\") {\n          return \"card marvel\";\n        } else if (company === \"DC\") {\n          return \"card dc\";\n        } else {\n          return \"card indy\";\n        }\n      }\n\n      function logoPicker(company) {\n        if (company === \"Marvel\") {\n          return marvelLogo;\n        } else if (company === \"DC\") {\n          return DCLogo;\n        } else {\n          return \"\";\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"resultsPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.props.searchResults.map(function (char) {\n        return React.createElement(\"div\", {\n          className: cardStylePicker(char.company),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"cardTop\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"charImage\",\n          src: char.imageURL ? char.imageURL : noImageFound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, char.name.toUpperCase()), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, char.civName), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, char.firstDebut))), React.createElement(\"div\", {\n          className: \"cardMid\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"abilities\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, char.abilities.map(function (ability) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70\n            },\n            __self: this\n          }, ability);\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"teams\"), React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, char.teams.map(function (team) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, team);\n        })), React.createElement(\"p\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, char.desc)), React.createElement(\"img\", {\n          className: \"company-logo\",\n          src: logoPicker(char.company),\n          alt: \"Logo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return ResultsPage;\n}(Component);\n\nexport default ResultsPage;","map":{"version":3,"sources":["/Users/jake/dev/excelsior/excelsior-front/src/ResultsPage/ResultsPage.js"],"names":["React","Component","marvelLogo","DCLogo","noImageFound","ResultsPage","props","charImagePicker","url","cardStylePicker","company","logoPicker","searchResults","map","char","imageURL","name","toUpperCase","civName","firstDebut","abilities","ability","teams","team","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport marvelLogo from'./marvel-logo.png';\nimport DCLogo from'./DC-logo.png';\nimport noImageFound from \"./image-default.jpg\";\n\nimport \"./ResultsPage.css\";\n//import { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\nclass ResultsPage extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n \n  \n  render() {\n\n    function charImagePicker(url) {\n        if (url) {\n\n        }\n    }\n\n    function cardStylePicker(company) {\n\n        if (company === \"Marvel\") {\n            return \"card marvel\";\n        }\n        else if (company === \"DC\") {\n            return \"card dc\";\n        }\n        else {\n            return \"card indy\";\n        }\n    }\n\n    function logoPicker(company) {\n        if (company === \"Marvel\") {\n            return marvelLogo;\n        }\n        else if (company === \"DC\") {\n            return DCLogo;\n        }\n        else {\n            return \"\";\n        }\n    }\n\n    return (\n      <div className=\"resultsPage\">\n        {\n        this.props.searchResults.map((char) => {\n            return (\n                <div className={cardStylePicker(char.company)}>\n                    <div className=\"cardTop\">\n                        <img className=\"charImage\" src={(char.imageURL) ? char.imageURL : noImageFound} />\n                        <div>\n                            <h1>{char.name.toUpperCase()}</h1>\n                            <p>{char.civName}</p>\n                            <p>{char.firstDebut}</p>\n                        </div>\n                           \n                    </div>\n                    <div className=\"cardMid\">\n                            <p>abilities</p>\n                            <ul>\n                            {char.abilities.map(ability => {\n                                return (<li>{ability}</li>)\n                                \n                            })}\n                            </ul>\n                            <p>teams</p>\n                            <ul>\n                            {char.teams.map(team => {\n                                return (<li>{team}</li>)\n                            })}\n                            </ul>\n                            <p className=\"description\">{char.desc}</p>    \n                        </div> \n                    \n                    \n                    <img className=\"company-logo\" src={logoPicker(char.company)} alt=\"Logo\"/>\n                </div>\n                )\n        })\n        }\n      </div>\n      \n    );\n  }\n}\n\n\n\nexport default ResultsPage;"]},"metadata":{},"sourceType":"module"}